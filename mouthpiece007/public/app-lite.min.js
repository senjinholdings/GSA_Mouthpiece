(function(){"use strict";const BASE_PATH_RAW=window.__BASE_PATH__??window.SITE_CONFIG?.basePath??"/";const BASE_PATH_PREFIX=BASE_PATH_RAW==="/"||BASE_PATH_RAW===""?"":BASE_PATH_RAW.replace(/\/+$/,"");const RegionUtils=window.RegionUtils??(()=>{const n=e=>{if(null==e)return null;const t=String(e).match(/\d+/);return t?t[0].padStart(3,"0"):null};const t=e=>"string"!=typeof e?[]:e.split("/").filter(Boolean);const o=e=>{const o=t(e);if(0===o.length)return null;const r=o.findIndex((e=>"r"===e.toLowerCase()));if(r!==-1&&o[r+1])return n(o[r+1]);for(let e=o.length-1;e>=0;e--){const t=o[e].match(/^r[-_]?(\d{1,3})$/i);if(t)return n(t[1]);}const i=o[o.length-1];if(i){const t=i.match(/^(\d{1,3})$/);if(t)return n(t[1]);}return null};const r=e=>{if("string"!=typeof e)return null;try{return n((new URLSearchParams(e)).get("region_id"))}catch{return null}};const i=e=>{const t=n(e);return t&&('undefined'!=typeof window&&(window.__REGION_ID__=t)),t};const d=({fallback:e="013",prefer:t="path"}={})=>{if("undefined"==typeof window)return e;const d=n(window.__REGION_ID__);if(d)return d;const a=o(window.location.pathname||""),c=r(window.location.search||""),l="query"===t?c||a:a||c;return l?(i(l),l):e};return{normalizeRegionId:n,detectRegionIdFromPath:o,detectRegionIdFromQuery:r,determineRegionId:d,rememberRegionId:i}})();if("undefined"!=typeof window&&!window.RegionUtils){window.RegionUtils=RegionUtils;};;const withBasePath=resource=>{if(typeof resource!=="string"||resource.length===0){return resource}if(/^(?:[a-z][a-z0-9+.-]*:|\/\/|data:|mailto:|tel:)/i.test(resource)){return resource}if(!BASE_PATH_PREFIX){return resource.startsWith("./")?resource.slice(2):resource}let normalized=resource.startsWith("./")?resource.slice(2):resource;if(!normalized.startsWith("/")){normalized=`/${normalized}`}return`${BASE_PATH_PREFIX}${normalized}`};class DataManager{constructor(){this.commonTexts={};this.clinics=[];this.rankings={};this.clinicTexts={};this.loaded=false}async loadData(regionId="013"){try{const[commonTexts,clinicsData]=await Promise.all([fetch(withBasePath("/common_data/data/site-common-texts.json")).then(r=>r.json()),fetch(withBasePath("/common_data/data/mouthpiece_clinics_data_001.json")).then(r=>r.json())]);this.commonTexts=commonTexts;this.clinics=clinicsData.clinics||[];this.rankings=clinicsData.rankings||{};this.clinicTexts=clinicsData.clinicTexts||{};this.loaded=true;window.dispatchEvent(new CustomEvent("dataManagerReady"));return true}catch(error){console.error("Data loading error:",error);return false}}getText(key,defaultValue=""){return this.commonTexts[key]||defaultValue}getClinicById(clinicId){return this.clinics.find(c=>c.id===clinicId)}getClinicCodeById(clinicId){const clinic=this.getClinicById(clinicId);return clinic?clinic.code:null}getClinicText(clinicCode,key,defaultValue=""){const clinic=this.clinics.find(c=>c.code===clinicCode);return clinic&&clinic[key]?clinic[key]:defaultValue}getClinicHeaderConfig(){const config=this.clinicTexts&&this.clinicTexts["比較表ヘッダー設定"];return config&&typeof config==="object"?config:{}}getRankingsByRegion(regionId="013"){return this.rankings[regionId]||[]}}class UrlParamHandler{getParam(name){const urlParams=new URLSearchParams(window.location.search);return urlParams.get(name)}getRegionId(){return RegionUtils.determineRegionId()}}window.DataManager=DataManager;window.dataManager=new DataManager;window.urlParamHandler=new UrlParamHandler;document.addEventListener("DOMContentLoaded",function(){const regionId=window.urlParamHandler.getRegionId();window.dataManager.loadData(regionId)});window.getClinicUrlFromConfig=function(clinicId,rank=1){if(window.dataManager){const clinicCode=window.dataManager.getClinicCodeById(clinicId);if(clinicCode){const urlKey=`遷移先URL（${rank}位）`;const url=window.dataManager.getClinicText(clinicCode,urlKey,"");if(url)return url}}return"#"}})();